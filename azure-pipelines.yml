trigger:
  branches:
    include:
      - main  # Runs when the main branch is updated

pool:
  vmImage: 'ubuntu-latest'  # You can switch to macOS for iOS builds

variables:
  flutterVersion: 'master'  # Use Flutter master channel for pre-release support

steps:
# ----------------------------------------
# STEP 1: Install Flutter from the master channel
# ----------------------------------------
- script: |
    git clone https://github.com/flutter/flutter.git -b ${{ variables.flutterVersion }} --depth 1
    echo "##vso[task.setvariable variable=FLUTTER_HOME]$(pwd)/flutter"
    export PATH="$FLUTTER_HOME/bin:$PATH"
  displayName: 'Install Flutter Master'

# ----------------------------------------
# STEP 2: Accept Android SDK Licenses (if needed)
# ----------------------------------------
- script: |
    flutter doctor --android-licenses
  displayName: 'Accept Android SDK Licenses'

# ----------------------------------------
# STEP 3: Verify Flutter & Install Dependencies
# ----------------------------------------
- script: |
    flutter --version
    flutter pub get  # Install dependencies defined in pubspec.yaml
  displayName: 'Setup Flutter and Install Dependencies'

# ----------------------------------------
# STEP 4: Build APK (for Android)
# ----------------------------------------
- script: |
    flutter build apk --release  # Build APK for Android (uncomment for iOS if needed)
  displayName: 'Build APK Release'

# ----------------------------------------
# STEP 5: Publish APK to Artifacts
# ----------------------------------------
- task: CopyFiles@2
  inputs:
    SourceFolder: 'build/app/outputs/flutter-apk/'
    Contents: '*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy APK to Artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish APK Artifact'
