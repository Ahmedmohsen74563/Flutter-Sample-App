trigger:
  branches:
    include:
      - main  # Runs when main branch is updated

pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu, macOS, or Windows depending on your needs

variables:
  flutterVersion: 'master'  # Change this to a stable version if required

steps:
# ----------------------------------------
# STEP 1: Install Flutter from the master channel
# ----------------------------------------
- script: |
    # Clone the Flutter repository from the master branch
    git clone https://github.com/flutter/flutter.git -b ${{ variables.flutterVersion }} --depth 1

    # Set FLUTTER_HOME to point to the Flutter directory
    export FLUTTER_HOME=$(pwd)/flutter
    export PATH="$FLUTTER_HOME/bin:$PATH"  # Add Flutter binary to PATH

    # Check Flutter version to confirm it installed correctly
    flutter --version
  displayName: 'Install Flutter Master'

# ----------------------------------------
# STEP 2: Accept Android SDK Licenses (if needed)
# ----------------------------------------
- script: |
    # Ensure Flutter is in PATH for subsequent commands
    export PATH="$FLUTTER_HOME/bin:$PATH"
    
    # Accept Android SDK Licenses
    flutter doctor --android-licenses
  displayName: 'Accept Android SDK Licenses'

# ----------------------------------------
# STEP 3: Verify Flutter & Install Dependencies
# ----------------------------------------
- script: |
    # Ensure Flutter is in PATH
    export PATH="$FLUTTER_HOME/bin:$PATH"

    # Verify Flutter installation
    flutter --version

    # Install dependencies from pubspec.yaml
    flutter pub get
  displayName: 'Setup Flutter and Install Dependencies'

# ----------------------------------------
# STEP 4: Build APK (for Android)
# ----------------------------------------
- script: |
    # Ensure Flutter is in PATH for the build command
    export PATH="$FLUTTER_HOME/bin:$PATH"
    
    # Build APK for Android release
    flutter build apk --release
  displayName: 'Build APK Release'

# ----------------------------------------
# STEP 5: Publish APK to Artifacts
# ----------------------------------------
- task: CopyFiles@2
  inputs:
    SourceFolder: 'build/app/outputs/flutter-apk/'
    Contents: '*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy APK to Artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish APK Artifact'
